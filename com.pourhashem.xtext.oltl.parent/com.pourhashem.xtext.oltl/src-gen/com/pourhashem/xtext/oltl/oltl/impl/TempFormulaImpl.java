/**
 * generated by Xtext 2.10.0
 */
package com.pourhashem.xtext.oltl.oltl.impl;

import com.pourhashem.xtext.oltl.oltl.AP;
import com.pourhashem.xtext.oltl.oltl.OltlPackage;
import com.pourhashem.xtext.oltl.oltl.TempFormula;
import com.pourhashem.xtext.oltl.oltl.WInt;
import com.pourhashem.xtext.oltl.oltl.Weight;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Temp Formula</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getAp <em>Ap</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getFa <em>Fa</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getFo <em>Fo</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getFnot <em>Fnot</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getOp2 <em>Op2</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getF1 <em>F1</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getF2 <em>F2</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getOpf <em>Opf</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getF <em>F</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getWeight <em>Weight</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getFNext <em>FNext</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getX1 <em>X1</em>}</li>
 *   <li>{@link com.pourhashem.xtext.oltl.oltl.impl.TempFormulaImpl#getX2 <em>X2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TempFormulaImpl extends MinimalEObjectImpl.Container implements TempFormula
{
  /**
   * The cached value of the '{@link #getAp() <em>Ap</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAp()
   * @generated
   * @ordered
   */
  protected AP ap;

  /**
   * The cached value of the '{@link #getFa() <em>Fa</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFa()
   * @generated
   * @ordered
   */
  protected EList<TempFormula> fa;

  /**
   * The cached value of the '{@link #getFo() <em>Fo</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFo()
   * @generated
   * @ordered
   */
  protected EList<TempFormula> fo;

  /**
   * The cached value of the '{@link #getFnot() <em>Fnot</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFnot()
   * @generated
   * @ordered
   */
  protected TempFormula fnot;

  /**
   * The default value of the '{@link #getOp2() <em>Op2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp2()
   * @generated
   * @ordered
   */
  protected static final String OP2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp2() <em>Op2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp2()
   * @generated
   * @ordered
   */
  protected String op2 = OP2_EDEFAULT;

  /**
   * The cached value of the '{@link #getF1() <em>F1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getF1()
   * @generated
   * @ordered
   */
  protected TempFormula f1;

  /**
   * The cached value of the '{@link #getF2() <em>F2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getF2()
   * @generated
   * @ordered
   */
  protected TempFormula f2;

  /**
   * The default value of the '{@link #getOpf() <em>Opf</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpf()
   * @generated
   * @ordered
   */
  protected static final String OPF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOpf() <em>Opf</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpf()
   * @generated
   * @ordered
   */
  protected String opf = OPF_EDEFAULT;

  /**
   * The cached value of the '{@link #getF() <em>F</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getF()
   * @generated
   * @ordered
   */
  protected TempFormula f;

  /**
   * The cached value of the '{@link #getWeight() <em>Weight</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected Weight weight;

  /**
   * The cached value of the '{@link #getFNext() <em>FNext</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFNext()
   * @generated
   * @ordered
   */
  protected TempFormula fNext;

  /**
   * The cached value of the '{@link #getX1() <em>X1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX1()
   * @generated
   * @ordered
   */
  protected WInt x1;

  /**
   * The cached value of the '{@link #getX2() <em>X2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX2()
   * @generated
   * @ordered
   */
  protected WInt x2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TempFormulaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OltlPackage.Literals.TEMP_FORMULA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AP getAp()
  {
    return ap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAp(AP newAp, NotificationChain msgs)
  {
    AP oldAp = ap;
    ap = newAp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__AP, oldAp, newAp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAp(AP newAp)
  {
    if (newAp != ap)
    {
      NotificationChain msgs = null;
      if (ap != null)
        msgs = ((InternalEObject)ap).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__AP, null, msgs);
      if (newAp != null)
        msgs = ((InternalEObject)newAp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__AP, null, msgs);
      msgs = basicSetAp(newAp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__AP, newAp, newAp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TempFormula> getFa()
  {
    if (fa == null)
    {
      fa = new EObjectContainmentEList<TempFormula>(TempFormula.class, this, OltlPackage.TEMP_FORMULA__FA);
    }
    return fa;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TempFormula> getFo()
  {
    if (fo == null)
    {
      fo = new EObjectContainmentEList<TempFormula>(TempFormula.class, this, OltlPackage.TEMP_FORMULA__FO);
    }
    return fo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TempFormula getFnot()
  {
    return fnot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFnot(TempFormula newFnot, NotificationChain msgs)
  {
    TempFormula oldFnot = fnot;
    fnot = newFnot;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__FNOT, oldFnot, newFnot);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFnot(TempFormula newFnot)
  {
    if (newFnot != fnot)
    {
      NotificationChain msgs = null;
      if (fnot != null)
        msgs = ((InternalEObject)fnot).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__FNOT, null, msgs);
      if (newFnot != null)
        msgs = ((InternalEObject)newFnot).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__FNOT, null, msgs);
      msgs = basicSetFnot(newFnot, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__FNOT, newFnot, newFnot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp2()
  {
    return op2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp2(String newOp2)
  {
    String oldOp2 = op2;
    op2 = newOp2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__OP2, oldOp2, op2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TempFormula getF1()
  {
    return f1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetF1(TempFormula newF1, NotificationChain msgs)
  {
    TempFormula oldF1 = f1;
    f1 = newF1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__F1, oldF1, newF1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setF1(TempFormula newF1)
  {
    if (newF1 != f1)
    {
      NotificationChain msgs = null;
      if (f1 != null)
        msgs = ((InternalEObject)f1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__F1, null, msgs);
      if (newF1 != null)
        msgs = ((InternalEObject)newF1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__F1, null, msgs);
      msgs = basicSetF1(newF1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__F1, newF1, newF1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TempFormula getF2()
  {
    return f2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetF2(TempFormula newF2, NotificationChain msgs)
  {
    TempFormula oldF2 = f2;
    f2 = newF2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__F2, oldF2, newF2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setF2(TempFormula newF2)
  {
    if (newF2 != f2)
    {
      NotificationChain msgs = null;
      if (f2 != null)
        msgs = ((InternalEObject)f2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__F2, null, msgs);
      if (newF2 != null)
        msgs = ((InternalEObject)newF2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__F2, null, msgs);
      msgs = basicSetF2(newF2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__F2, newF2, newF2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOpf()
  {
    return opf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOpf(String newOpf)
  {
    String oldOpf = opf;
    opf = newOpf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__OPF, oldOpf, opf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TempFormula getF()
  {
    return f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetF(TempFormula newF, NotificationChain msgs)
  {
    TempFormula oldF = f;
    f = newF;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__F, oldF, newF);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setF(TempFormula newF)
  {
    if (newF != f)
    {
      NotificationChain msgs = null;
      if (f != null)
        msgs = ((InternalEObject)f).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__F, null, msgs);
      if (newF != null)
        msgs = ((InternalEObject)newF).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__F, null, msgs);
      msgs = basicSetF(newF, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__F, newF, newF));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Weight getWeight()
  {
    return weight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWeight(Weight newWeight, NotificationChain msgs)
  {
    Weight oldWeight = weight;
    weight = newWeight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__WEIGHT, oldWeight, newWeight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWeight(Weight newWeight)
  {
    if (newWeight != weight)
    {
      NotificationChain msgs = null;
      if (weight != null)
        msgs = ((InternalEObject)weight).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__WEIGHT, null, msgs);
      if (newWeight != null)
        msgs = ((InternalEObject)newWeight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__WEIGHT, null, msgs);
      msgs = basicSetWeight(newWeight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__WEIGHT, newWeight, newWeight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TempFormula getFNext()
  {
    return fNext;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFNext(TempFormula newFNext, NotificationChain msgs)
  {
    TempFormula oldFNext = fNext;
    fNext = newFNext;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__FNEXT, oldFNext, newFNext);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFNext(TempFormula newFNext)
  {
    if (newFNext != fNext)
    {
      NotificationChain msgs = null;
      if (fNext != null)
        msgs = ((InternalEObject)fNext).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__FNEXT, null, msgs);
      if (newFNext != null)
        msgs = ((InternalEObject)newFNext).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__FNEXT, null, msgs);
      msgs = basicSetFNext(newFNext, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__FNEXT, newFNext, newFNext));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WInt getX1()
  {
    return x1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetX1(WInt newX1, NotificationChain msgs)
  {
    WInt oldX1 = x1;
    x1 = newX1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__X1, oldX1, newX1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setX1(WInt newX1)
  {
    if (newX1 != x1)
    {
      NotificationChain msgs = null;
      if (x1 != null)
        msgs = ((InternalEObject)x1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__X1, null, msgs);
      if (newX1 != null)
        msgs = ((InternalEObject)newX1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__X1, null, msgs);
      msgs = basicSetX1(newX1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__X1, newX1, newX1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WInt getX2()
  {
    return x2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetX2(WInt newX2, NotificationChain msgs)
  {
    WInt oldX2 = x2;
    x2 = newX2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__X2, oldX2, newX2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setX2(WInt newX2)
  {
    if (newX2 != x2)
    {
      NotificationChain msgs = null;
      if (x2 != null)
        msgs = ((InternalEObject)x2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__X2, null, msgs);
      if (newX2 != null)
        msgs = ((InternalEObject)newX2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OltlPackage.TEMP_FORMULA__X2, null, msgs);
      msgs = basicSetX2(newX2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OltlPackage.TEMP_FORMULA__X2, newX2, newX2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OltlPackage.TEMP_FORMULA__AP:
        return basicSetAp(null, msgs);
      case OltlPackage.TEMP_FORMULA__FA:
        return ((InternalEList<?>)getFa()).basicRemove(otherEnd, msgs);
      case OltlPackage.TEMP_FORMULA__FO:
        return ((InternalEList<?>)getFo()).basicRemove(otherEnd, msgs);
      case OltlPackage.TEMP_FORMULA__FNOT:
        return basicSetFnot(null, msgs);
      case OltlPackage.TEMP_FORMULA__F1:
        return basicSetF1(null, msgs);
      case OltlPackage.TEMP_FORMULA__F2:
        return basicSetF2(null, msgs);
      case OltlPackage.TEMP_FORMULA__F:
        return basicSetF(null, msgs);
      case OltlPackage.TEMP_FORMULA__WEIGHT:
        return basicSetWeight(null, msgs);
      case OltlPackage.TEMP_FORMULA__FNEXT:
        return basicSetFNext(null, msgs);
      case OltlPackage.TEMP_FORMULA__X1:
        return basicSetX1(null, msgs);
      case OltlPackage.TEMP_FORMULA__X2:
        return basicSetX2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OltlPackage.TEMP_FORMULA__AP:
        return getAp();
      case OltlPackage.TEMP_FORMULA__FA:
        return getFa();
      case OltlPackage.TEMP_FORMULA__FO:
        return getFo();
      case OltlPackage.TEMP_FORMULA__FNOT:
        return getFnot();
      case OltlPackage.TEMP_FORMULA__OP2:
        return getOp2();
      case OltlPackage.TEMP_FORMULA__F1:
        return getF1();
      case OltlPackage.TEMP_FORMULA__F2:
        return getF2();
      case OltlPackage.TEMP_FORMULA__OPF:
        return getOpf();
      case OltlPackage.TEMP_FORMULA__F:
        return getF();
      case OltlPackage.TEMP_FORMULA__WEIGHT:
        return getWeight();
      case OltlPackage.TEMP_FORMULA__FNEXT:
        return getFNext();
      case OltlPackage.TEMP_FORMULA__X1:
        return getX1();
      case OltlPackage.TEMP_FORMULA__X2:
        return getX2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OltlPackage.TEMP_FORMULA__AP:
        setAp((AP)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__FA:
        getFa().clear();
        getFa().addAll((Collection<? extends TempFormula>)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__FO:
        getFo().clear();
        getFo().addAll((Collection<? extends TempFormula>)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__FNOT:
        setFnot((TempFormula)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__OP2:
        setOp2((String)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__F1:
        setF1((TempFormula)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__F2:
        setF2((TempFormula)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__OPF:
        setOpf((String)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__F:
        setF((TempFormula)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__WEIGHT:
        setWeight((Weight)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__FNEXT:
        setFNext((TempFormula)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__X1:
        setX1((WInt)newValue);
        return;
      case OltlPackage.TEMP_FORMULA__X2:
        setX2((WInt)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OltlPackage.TEMP_FORMULA__AP:
        setAp((AP)null);
        return;
      case OltlPackage.TEMP_FORMULA__FA:
        getFa().clear();
        return;
      case OltlPackage.TEMP_FORMULA__FO:
        getFo().clear();
        return;
      case OltlPackage.TEMP_FORMULA__FNOT:
        setFnot((TempFormula)null);
        return;
      case OltlPackage.TEMP_FORMULA__OP2:
        setOp2(OP2_EDEFAULT);
        return;
      case OltlPackage.TEMP_FORMULA__F1:
        setF1((TempFormula)null);
        return;
      case OltlPackage.TEMP_FORMULA__F2:
        setF2((TempFormula)null);
        return;
      case OltlPackage.TEMP_FORMULA__OPF:
        setOpf(OPF_EDEFAULT);
        return;
      case OltlPackage.TEMP_FORMULA__F:
        setF((TempFormula)null);
        return;
      case OltlPackage.TEMP_FORMULA__WEIGHT:
        setWeight((Weight)null);
        return;
      case OltlPackage.TEMP_FORMULA__FNEXT:
        setFNext((TempFormula)null);
        return;
      case OltlPackage.TEMP_FORMULA__X1:
        setX1((WInt)null);
        return;
      case OltlPackage.TEMP_FORMULA__X2:
        setX2((WInt)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OltlPackage.TEMP_FORMULA__AP:
        return ap != null;
      case OltlPackage.TEMP_FORMULA__FA:
        return fa != null && !fa.isEmpty();
      case OltlPackage.TEMP_FORMULA__FO:
        return fo != null && !fo.isEmpty();
      case OltlPackage.TEMP_FORMULA__FNOT:
        return fnot != null;
      case OltlPackage.TEMP_FORMULA__OP2:
        return OP2_EDEFAULT == null ? op2 != null : !OP2_EDEFAULT.equals(op2);
      case OltlPackage.TEMP_FORMULA__F1:
        return f1 != null;
      case OltlPackage.TEMP_FORMULA__F2:
        return f2 != null;
      case OltlPackage.TEMP_FORMULA__OPF:
        return OPF_EDEFAULT == null ? opf != null : !OPF_EDEFAULT.equals(opf);
      case OltlPackage.TEMP_FORMULA__F:
        return f != null;
      case OltlPackage.TEMP_FORMULA__WEIGHT:
        return weight != null;
      case OltlPackage.TEMP_FORMULA__FNEXT:
        return fNext != null;
      case OltlPackage.TEMP_FORMULA__X1:
        return x1 != null;
      case OltlPackage.TEMP_FORMULA__X2:
        return x2 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (op2: ");
    result.append(op2);
    result.append(", opf: ");
    result.append(opf);
    result.append(')');
    return result.toString();
  }

} //TempFormulaImpl
