/**
 * generated by Xtext 2.31.0
 */
package org.xtext.example.mydsl.liTeLLab.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.liTeLLab.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LiTeLLabFactoryImpl extends EFactoryImpl implements LiTeLLabFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LiTeLLabFactory init()
  {
    try
    {
      LiTeLLabFactory theLiTeLLabFactory = (LiTeLLabFactory)EPackage.Registry.INSTANCE.getEFactory(LiTeLLabPackage.eNS_URI);
      if (theLiTeLLabFactory != null)
      {
        return theLiTeLLabFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LiTeLLabFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LiTeLLabFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LiTeLLabPackage.MODEL: return createModel();
      case LiTeLLabPackage.WEIGHT: return createWeight();
      case LiTeLLabPackage.WINT: return createWInt();
      case LiTeLLabPackage.WFLOAT: return createWFloat();
      case LiTeLLabPackage.TEMP_FORMULA: return createTempFormula();
      case LiTeLLabPackage.TEMP_TERM: return createTempTerm();
      case LiTeLLabPackage.AP: return createAP();
      case LiTeLLabPackage.VAR: return createVAR();
      case LiTeLLabPackage.OLD_VAR: return createoldVAR();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Weight createWeight()
  {
    WeightImpl weight = new WeightImpl();
    return weight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WInt createWInt()
  {
    WIntImpl wInt = new WIntImpl();
    return wInt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WFloat createWFloat()
  {
    WFloatImpl wFloat = new WFloatImpl();
    return wFloat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TempFormula createTempFormula()
  {
    TempFormulaImpl tempFormula = new TempFormulaImpl();
    return tempFormula;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TempTerm createTempTerm()
  {
    TempTermImpl tempTerm = new TempTermImpl();
    return tempTerm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AP createAP()
  {
    APImpl ap = new APImpl();
    return ap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VAR createVAR()
  {
    VARImpl var = new VARImpl();
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public oldVAR createoldVAR()
  {
    oldVARImpl oldVAR = new oldVARImpl();
    return oldVAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LiTeLLabPackage getLiTeLLabPackage()
  {
    return (LiTeLLabPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LiTeLLabPackage getPackage()
  {
    return LiTeLLabPackage.eINSTANCE;
  }

} //LiTeLLabFactoryImpl
