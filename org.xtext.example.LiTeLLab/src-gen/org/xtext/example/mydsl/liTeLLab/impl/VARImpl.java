/**
 * generated by Xtext 2.31.0
 */
package org.xtext.example.mydsl.liTeLLab.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.liTeLLab.LiTeLLabPackage;
import org.xtext.example.mydsl.liTeLLab.VAR;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>VAR</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.liTeLLab.impl.VARImpl#getVName <em>VName</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VARImpl extends MinimalEObjectImpl.Container implements VAR
{
  /**
   * The default value of the '{@link #getVName() <em>VName</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVName()
   * @generated
   * @ordered
   */
  protected static final String VNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVName() <em>VName</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVName()
   * @generated
   * @ordered
   */
  protected String vName = VNAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VARImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LiTeLLabPackage.Literals.VAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVName()
  {
    return vName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVName(String newVName)
  {
    String oldVName = vName;
    vName = newVName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LiTeLLabPackage.VAR__VNAME, oldVName, vName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LiTeLLabPackage.VAR__VNAME:
        return getVName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LiTeLLabPackage.VAR__VNAME:
        setVName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LiTeLLabPackage.VAR__VNAME:
        setVName(VNAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LiTeLLabPackage.VAR__VNAME:
        return VNAME_EDEFAULT == null ? vName != null : !VNAME_EDEFAULT.equals(vName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (vName: ");
    result.append(vName);
    result.append(')');
    return result.toString();
  }

} //VARImpl
